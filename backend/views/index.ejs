<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>RAG Assistant - Document Intelligence</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: linear-gradient(135deg, 
                rgba(0, 0, 0, 1) 0%, 
                rgba(112, 5, 64, 0.9) 50%, 
                rgba(0, 0, 0, 1) 100%
            );
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 0;
            overflow: hidden;
        }
        
        /* Animated background elements */
        .bg-decoration {
            position: fixed;
            top: 0;
            left: 0;
            width: 100vw;
            height: 100vh;
            pointer-events: none;
            z-index: -1;
        }
        
        .floating-shape {
            position: absolute;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 50%;
            animation: float 6s ease-in-out infinite;
        }
        
        .shape-1 { width: 120px; height: 120px; top: 10%; left: 10%; animation-delay: 0s; }
        .shape-2 { width: 180px; height: 180px; top: 60%; right: 10%; animation-delay: 2s; }
        .shape-3 { width: 90px; height: 90px; bottom: 20%; left: 30%; animation-delay: 4s; }
        
        @keyframes float {
            0%, 100% { transform: translateY(0) rotate(0deg); }
            50% { transform: translateY(-30px) rotate(180deg); }
        }
        
        .main-container {
            backdrop-filter: blur(20px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            width: 100vw;
            height: 100vh;
            display: flex;
            flex-direction: column;
            overflow: hidden;
            position: relative;
            transition: all 0.3s ease;
        }
        
        .main-container:hover {
            transform: translateY(-2px);
            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.15);
        }
        
        .content-area {
            width: 95%;
            height: 90%;
            margin: auto;
            padding: 20px;
            position: relative;
            overflow: hidden;
            background-color: white;
            border-radius: 15px;
            box-shadow: 0 6px 18px rgba(0, 0, 0, 0.2);
            display: flex;
            flex-direction: row;
            justify-content: space-between;
            align-items: stretch;
            background-image: url('images/background.png');
            background-size: cover;
            transition: all 0.5s ease;
        }
        
        .content-area.chat-mode {
            padding: 0;
        }
        
        .left-section {
            position: absolute;
            top: 20px;
            right: 20px;
            width: 41%;
            max-width: 1000px;
            height: auto;
            padding: 20px;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            background: linear-gradient(135deg, #000 0%, rgba(112, 5, 64, 0.9) 50%, #000 100%);
            border-radius: 20px;
            border: 1px solid rgba(255, 255, 255, 0.2);
            backdrop-filter: blur(15px);
            box-sizing: border-box;
            transition: all 0.5s ease;
        }
        
        .left-section.hidden {
            opacity: 0;
            visibility: hidden;
            transform: translateX(100%);
        }
        
        .upload-title {
            font-size: 28px;
            font-weight: 700;
            color: white;
            margin-bottom: 10px;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        }
        
        .upload-subtitle {
            font-size: 16px;
            color: rgba(255, 255, 255, 0.8);
            margin-bottom: 30px;
            text-align: center;
            max-width: 300px;
        }
        
        .file-input-wrapper {
            position: relative;
            display: inline-block;
            width: 100%;
        }
        
        .file-input {
            position: absolute;
            opacity: 0;
            width: 100%;
            height: 100%;
            cursor: pointer;
        }
        
        .file-input-display {
            background: rgba(255, 255, 255, 0.1);
            border: 2px dashed rgba(255, 255, 255, 0.4);
            border-radius: 25px;
            padding: 30px 20px;
            text-align: center;
            color: white;
            font-size: 16px;
            font-weight: 500;
            transition: all 0.3s ease;
            backdrop-filter: blur(10px);
            width: 100%;
            height: 200px;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            gap: 10px;
            cursor: pointer;
        }
        
        .file-input-display:hover {
            border-color: #4ecdc4;
            background: rgba(78, 205, 196, 0.1);
            transform: translateY(-4px);
            box-shadow: 0 8px 20px rgba(78, 205, 196, 0.2);
        }
        
        .file-icon {
            font-size: 50px;
            margin-bottom: 5px;
        }
        
        .right-section {
            position: absolute;
            bottom: 20px;
            right: 20px;
            width: 20%;
            max-width: 400px;
            height: 140px;
            padding: 20px;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            background: linear-gradient(135deg, #000 0%, rgba(4, 94, 42, 0.9) 50%, #000 100%);
            border-radius: 20px;
            border: 1px solid rgba(255, 255, 255, 0.2);
            backdrop-filter: blur(15px);
            box-sizing: border-box;
            transition: all 0.5s ease;
            z-index: 10;
        }

        .right-section2 {
            position: absolute;
            bottom: 20px;
            right: 270px;
            width: 20%;
            max-width: 400px;
            height: 140px;
            padding: 20px;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            background: linear-gradient(135deg, #000 0%, rgba(74, 6, 103, 0.9) 50%, #000 100%);
            border-radius: 20px;
            border: 1px solid rgba(255, 255, 255, 0.2);
            backdrop-filter: blur(15px);
            box-sizing: border-box;
            transition: all 0.5s ease;
        }
        
        .right-section2.hidden {
            opacity: 0;
            visibility: hidden;
            transform: translateY(100%);
        }
        
        .heading{
            font-size: 22px;
            font-weight: 600;
            color: white;
            margin-bottom: 5px;
        }
        
        .right-section.fullscreen {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            width: 100%;
            height: 100%;
            max-width: none;
            border-radius: 15px;
            padding: 20px;
            z-index: 100;
        }
        
        .chat-area {
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.1);
            border-radius: 15px;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            display: none;
            flex-direction: column;
            overflow: hidden;
            transition: all 0.5s ease;
        }
        
        .right-section.fullscreen .chat-area {
            display: flex !important;
            width: 100%;
            height: calc(100% - 80px);
            border-radius: 15px;
            background: linear-gradient(135deg, 
                rgba(0, 0, 0, 1) 0%, 
                rgba(112, 5, 64, 0.9) 50%, 
                rgba(0, 0, 0, 1) 100%
            );

        }
        
        .chat-header {
            padding: 15px;
            border-bottom: 1px solid rgba(255, 255, 255, 0.2);
            background: rgba(255, 255, 255, 0.05);
            border-radius: 15px 15px 0 0;
        }
        
        .chat-title {
            font-size: 22px;
            font-weight: 600;
            color: white;
            margin-bottom: 5px;
        }
        
        .chat-subtitle {
            font-size: 14px;
            color: rgba(255, 255, 255, 0.7);
            display: block;
        }
        
        .chat-messages {
            flex: 1;
            padding: 15px;
            overflow-y: auto;
            display: flex;
            flex-direction: column;
            gap: 10px;
        }
        
        .message {
            max-width: 80%;
            padding: 10px 12px;
            border-radius: 15px;
            font-size: 14px;
            line-height: 1.5;
            animation: slideIn 0.3s ease;
        }
        
        .message.user {
            align-self: flex-end;
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
        }
        
        .message.assistant {
            align-self: flex-start;
            background: rgba(255, 255, 255, 0.2);
            color: white;
            border: 1px solid rgba(255, 255, 255, 0.2);
        }
        
        @keyframes slideIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .search-bar {
            position: absolute;
            bottom: 90px;
            left: 20%;
            transform: translateX(-50%);
            width: 30%;
            max-width: 600px;
            z-index: 10;
            color: white;
            font-size: 16px;
            background: linear-gradient(135deg, 
                rgba(0, 0, 0, 1) 0%, 
                rgba(112, 5, 64, 0.9) 50%, 
                rgba(0, 0, 0, 1) 100%);
            border: none;
            border-radius: 40px;
            padding: 10px 15px;
            backdrop-filter: blur(10px);
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
            transition: all 0.5s ease;
        }
        
        .search-bar.fullscreen {
            position: absolute;
            bottom: 20px;
            left: 50%;
            transform: translateX(-50%);
            width: calc(100% - 40px);
            max-width: none;
            z-index: 101;
        }
        
        .search-bar::placeholder {
            color: rgba(255, 255, 255, 0.6);
        }
        
        .search-container {
            position: relative;
            display: flex;
            align-items: center;
        }
        
        .search-input {
            width: 100%;
            padding: 15px 50px 15px 20px;
            border: none;
            border-radius: 25px;
            background: rgba(255, 255, 255, 0.2);
            backdrop-filter: blur(10px);
            box-shadow: 0 6px 15px rgba(0, 0, 0, 0.1);
            font-size: 16px;
            outline: none;
            transition: all 0.3s ease;
            color: white;
            border: 1px solid rgba(255, 255, 255, 0.3);
        }
        
        .search-input:focus {
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
            transform: translateY(-2px);
            background: rgba(255, 255, 255, 0.25);
        }
        
        .search-input::placeholder {
            color: rgba(255, 255, 255, 0.7);
        }
        
        .send-button {
            position: absolute;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
            width: 35px;
            height: 35px;
            border: none;
            border-radius: 17.5px;
            background: linear-gradient(135deg, #4ecdc4, #44a08d);
            color: white;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
            font-size: 16px;
        }
        
        .send-button:hover {
            transform: translateY(-50%) scale(1.1);
            box-shadow: 0 4px 12px rgba(78, 205, 196, 0.3);
        }
        
        .upload-status {
            margin-top: 15px;
            padding: 8px 15px;
            border-radius: 12px;
            font-size: 14px;
            font-weight: 500;
            opacity: 0;
            transition: all 0.3s ease;
        }
        
        .upload-status.success {
            background: rgba(76, 175, 80, 0.2);
            color: #4caf50;
            border: 1px solid rgba(76, 175, 80, 0.3);
            opacity: 1;
        }
        
        .upload-status.error {
            background: rgba(244, 67, 54, 0.2);
            color: #f44336;
            border: 1px solid rgba(244, 67, 54, 0.3);
            opacity: 1;
        }
        
        .loading {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 2px solid rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            border-top-color: white;
            animation: spin 1s ease-in-out infinite;
        }
        
        @keyframes spin {
            to { transform: rotate(360deg); }
        }
        
        .rag-hero.hidden {
            opacity: 0;
            visibility: hidden;
            transition: all 0.5s ease;
        }
        
        @media (max-width: 768px) {
            .main-container {
                width: 100vw;
                height: 100vh;
                border-radius: 0;
                margin: 0;
            }
            
            .content-area {
                flex-direction: column;
                padding: 15px;
                gap: 15px;
                justify-content: center;
                align-items: center;
            }
            
            .left-section {
                position: static;
                width: 100%;
                max-width: 320px;
                height: auto;
                margin-bottom: 15px;
            }
            
            .right-section {
                width: 100%;
                max-width: 320px;
                height: 25vh;
                background: linear-gradient(135deg, #6b0f1a, #b91372);
                position: relative;
            }
            
            .right-section.fullscreen {
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                width: 100%;
                height: 100%;
                max-width: none;
                border-radius: 15px;
                padding: 15px;
            }
            
            .search-bar.fullscreen {
                width: calc(100% - 30px);
                max-width: none;
            }
            
            .file-input-display {
                height: 200px;
                padding: 20px;
            }
        }
        .history-button {
            background-color: #000;     
            color: #fff;                
            padding: 8px 16px;
            border: none;
            border-radius: 25px;
            font-size: 14px;
            cursor: pointer;
            transition: all 0.5s ease;
            height: 30px;
            left: 600px;
            position: absolute;
        }

        .history-button:hover {
            background-color: #222;      
        }

        .history-button.hidden {
            opacity: 0;
            visibility: hidden;
            transform: translateY(-100%);
        }

        .login-button {
            background-color: #ffffff;     
            color: #000000;                
            padding: 8px 16px;
            border:2px solid #000;
            border-radius: 25px;
            font-size: 14px;
            cursor: pointer;
            transition: all 0.5s ease;
            height: 30px;
            left: 520px;
            position: absolute;
        }

        .login-button:hover {
            background-color: #333;
        }

        .login-button.hidden {
            opacity: 0;
            visibility: hidden;
            transform: translateY(-100%);
        }

        .rag-hero {
            display: flex;
            justify-content: flex-start;
            align-items: flex-start;
            padding: 40px 20px;
            background: #ffffff;
            color: #111;
            font-family: 'Segoe UI', sans-serif;
            transition: all 0.5s ease;
        }

        .rag-hero.hidden {
            opacity: 0;
            visibility: hidden;
            transform: translateX(-100%);
        }

        .rag-text-section {
            max-width: 700px;
            text-align: left; 
            position: absolute;
            top: 120px;
        }

        .rag-text-section h1 {
            font-size: 2.8rem;
            font-weight: bold;
        }

        .rag-text-section h1 span {
            color: #c026d3;
        }

        .rag-subtitle {
            font-size: 1.1rem;
            color: #444;
            margin: 15px 0;
        }

        .rag-description {
            font-size: 0.95rem;
            color: #666;
            margin-top: 15px;
            line-height: 1.6;
        }

        .exit-fullscreen-button {
            position: absolute;
            top: 20px;
            right: 20px;
            background: linear-gradient(135deg, #faf9f8, #faf8f8);
            color: white;
            border: none;
            border-radius: 25px;
            padding: 8px 16px;
            font-size: 14px;
            cursor: pointer;
            transition: all 0.3s ease;
            z-index: 102;
        }

        .exit-fullscreen-button:hover {
            transform: scale(1.1);
            box-shadow: 0 4px 12px rgba(248, 246, 246, 0.3);
        }
    </style>
</head>
<body>
    <div class="main-container">
        <div class="content-area">
            <button class="login-button">Login</button>
            <button class="history-button">History</button>
            <div class="rag-hero">
                <div class="rag-text-section">
                    <h1>Discover Answers with <span>Intelligence</span></h1>
                    <p class="rag-subtitle">
                        Leverage the power of Retrieval-Augmented Generation to extract insights from<br> your documents with unmatched speed and precision.
                    </p>
                    <p class="rag-description">
                        Our system combines deep learning with real-time document search to bring you accurate,<br> context-aware answers instantly. Whether it's PDFs, research papers, or scanned documents<br> — we transform your data into knowledge.
                    </p>
                </div>
            </div>
            <div class="left-section">
                <h2 class="upload-title">Upload Document</h2>
                <p class="upload-subtitle">Support for PDF, TXT, DOCX, and more</p>
                <div class="file-input-wrapper">
                    <input type="file" id="documentInput" class="file-input" accept=".pdf,.txt,.docx,.doc,.md">
                    <div class="file-input-display" id="fileDisplay">
                        <div id="error-message" style="color: red; margin-top: 10px;"></div>
                        <div class="file-icon">📄</div>
                        <div>Click to upload or drag and drop</div>
                        <div style="font-size: 12px; opacity: 0.8;">Max 10MB</div>
                    </div>
                </div>
                <div class="upload-status" id="uploadStatus"></div>
            </div>
            <div class="right-section">
                <div class="chat-area">
                    <div class="chat-header">
                        <div class="chat-title">Document Chat</div>
                        <div class="chat-subtitle">Ask about your document</div>
                    </div>
                    <div class="chat-messages" id="chatMessages">
                        <div class="message assistant">
                            👋 Upload a document to start!
                        </div>
                    </div>
                </div>
                <div class="chat-title" id="initialChatTitle">Chat with your Document</div>
            </div>
            <div class="right-section2">
                <div class="heading">Summarise your documents with a click</div>
            </div>
        </div>
        <div class="search-bar">
            <div class="search-container">
                <input type="text" id="searchInput" class="search-input" placeholder="Ask about your document...">
                <button class="send-button" id="sendButton" onclick="sendMessage()">➤</button>
            </div>
        </div>
    </div>

    <script>
        let uploadedDocument = null;
let documentContent = null;
let promptSent = false;

document.addEventListener('DOMContentLoaded', () => {
    const fileInput = document.getElementById('documentInput');
    const searchInput = document.getElementById('searchInput');
    const sendButton = document.getElementById('sendButton');
    const chatMessages = document.getElementById('chatMessages');
    const uploadStatus = document.getElementById('uploadStatus');
    const fileDisplay = document.getElementById('fileDisplay');
    const rightSection = document.querySelector('.right-section');
    const searchBar = document.querySelector('.search-bar');
    const initialChatTitle = document.getElementById('initialChatTitle');
    const chatArea = document.querySelector('.chat-area');

    // Hide chat area and show initial title initially
    chatArea.style.display = 'none';
    initialChatTitle.style.display = 'block';

    fileInput.addEventListener('change', handleFileUpload);
    sendButton.addEventListener('click', sendMessage);
    
    fileDisplay.addEventListener('dragover', (e) => {
        e.preventDefault();
        fileDisplay.style.borderColor = '#4ecdc4';
        fileDisplay.style.background = 'rgba(78, 205, 196, 0.2)';
    });
    
    fileDisplay.addEventListener('dragleave', (e) => {
        e.preventDefault();
        fileDisplay.style.borderColor = 'rgba(255, 255, 255, 0.4)';
        fileDisplay.style.background = 'rgba(255, 255, 255, 0.1)';
    });
    
    fileDisplay.addEventListener('drop', (e) => {
        e.preventDefault();
        const files = e.dataTransfer.files;
        if (files.length > 0) {
            fileInput.files = files;
            handleFileUpload({ target: { files: files } });
        }
        fileDisplay.style.borderColor = 'rgba(255, 255, 255, 0.4)';
        fileDisplay.style.background = 'rgba(255, 255, 255, 0.1)';
    });

    searchInput.addEventListener('keypress', (e) => {
        if (e.key === 'Enter' && !e.shiftKey) {
            e.preventDefault();
            sendMessage();
        }
    });

    window.addEventListener('resize', adjustLayout);
    // Initial layout adjustment
    adjustLayout();
});

function handleFileUpload(e) {
    const file = e.target.files[0];
    const uploadStatus = document.getElementById('uploadStatus');
    const fileDisplay = document.getElementById('fileDisplay');
    
    if (!file) {
        showUploadStatus('No file selected.', 'error');
        return;
    }
    
    if (file.size > 10 * 1024 * 1024) {
        showUploadStatus('File too large. Max 10MB.', 'error');
        fileDisplay.innerHTML = `
            <div class="file-icon">📄</div>
            <div>Click to upload or drag and drop</div>
            <div style="font-size: 12px; opacity: 0.8;">Max 10MB</div>
        `;
        return;
    }
    
    fileDisplay.innerHTML = `
        <div class="file-icon">📄</div>
        <div>Uploading: ${file.name}</div>
        <div class="loading"></div>
    `;
    
    const formData = new FormData();
    formData.append('document', file);

    fetch('http://localhost:3000/upload', {
        method: 'POST',
        body: formData
    })
    .then(response => {
        if (!response.ok) {
            throw new Error(`Upload failed! Status: ${response.status}`);
        }
        return response.json();
    })
    .then(data => {
        if (data.message && data.message.includes('successfully')) {
            uploadedDocument = data.filename;
            promptSent = false; // Reset promptSent for new document
            setTimeout(() => {
                fileDisplay.innerHTML = `
                    <div class="file-icon">✅</div>
                    <div>Uploaded: ${file.name}</div>
                    <div style="font-size: 12px; opacity: 0.8;">Ready!</div>
                `;
                fileDisplay.style.background = 'rgba(76, 175, 80, 0.2)';
                fileDisplay.style.borderColor = '#4caf50';
                showUploadStatus('File uploaded successfully!', 'success');
            }, 2000);
        } else {
            uploadedDocument = null;
            showUploadStatus(data.message || 'Upload failed.', 'error');
            fileDisplay.innerHTML = `
                <div class="file-icon">📄</div>
                <div>Click to upload or drag and drop</div>
                <div style="font-size: 12px; opacity: 0.8;">Max 10MB</div>
            `;
        }
    })
    .catch(error => {
        uploadedDocument = null;
        showUploadStatus(`Error uploading file: ${error.message}`, 'error');
        fileDisplay.innerHTML = `
            <div class="file-icon">📄</div>
            <div>Click to upload or drag and drop</div>
            <div style="font-size: 12px; opacity: 0.8;">Max 10MB</div>
        `;
        console.error('Upload error:', error);
    });
}

function showUploadStatus(message, type) {
    const uploadStatus = document.getElementById('uploadStatus');
    uploadStatus.textContent = message;
    uploadStatus.className = `upload-status ${type}`;
    setTimeout(() => {
        uploadStatus.className = 'upload-status';
        uploadStatus.textContent = '';
    }, 5000);
}

function addMessage(sender, content) {
    const chatMessages = document.getElementById('chatMessages');
    const messageDiv = document.createElement('div');
    messageDiv.className = `message ${sender}`;
    messageDiv.textContent = content;
    chatMessages.appendChild(messageDiv);
    chatMessages.scrollTop = chatMessages.scrollHeight;
}

function sendMessage() {
    const searchInput = document.getElementById('searchInput');
    const sendButton = document.getElementById('sendButton');
    const rightSection = document.querySelector('.right-section');
    const searchBar = document.querySelector('.search-bar');
    const initialChatTitle = document.getElementById('initialChatTitle');
    const chatArea = document.querySelector('.chat-area');
    const contentArea = document.querySelector('.content-area');
    
    // Get all elements to hide
    const leftSection = document.querySelector('.left-section');
    const rightSection2 = document.querySelector('.right-section2');
    const loginButton = document.querySelector('.login-button');
    const historyButton = document.querySelector('.history-button');
    const ragHero = document.querySelector('.rag-hero');
    
    const prompt = searchInput.value.trim();
    
    if (!prompt) {
        addMessage('assistant', 'Please enter a prompt.');
        return;
    }
    
    if (!uploadedDocument) {
        addMessage('assistant', '⚠️ Upload a document first.');
        return;
    }
    
    // Enter fullscreen mode if not already in it
    if (!promptSent) {
        promptSent = true;
        
        // Hide all elements except chat and search bar
        leftSection.classList.add('hidden');
        rightSection2.classList.add('hidden');
        loginButton.classList.add('hidden');
        historyButton.classList.add('hidden');
        ragHero.classList.add('hidden');
        
        // Switch content area to chat mode
        contentArea.classList.add('chat-mode');
        
        // Make right section fullscreen within the container
        rightSection.classList.add('fullscreen');
        searchBar.classList.add('fullscreen');
        
        // Show chat area and hide initial title
        initialChatTitle.style.display = 'none';
        chatArea.style.display = 'flex';
        chatArea.style.opacity = '1';

        // Add exit fullscreen button
        const exitButton = document.createElement('button');
        exitButton.className = 'exit-fullscreen-button';
        exitButton.textContent = '✖';
        exitButton.style.color = 'black';
        exitButton.onclick = exitFullscreen;
        rightSection.appendChild(exitButton);

        // Force layout adjustment
        adjustLayout();
    }
    
    addMessage('user', prompt);
    searchInput.value = '';
    sendButton.disabled = true;
    sendButton.innerHTML = '<div class="loading"></div>';

    fetch('http://localhost:3000/query', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            filename: uploadedDocument,
            query: prompt
        })
    })
    .then(response => {
        if (!response.ok) {
            throw new Error(`HTTP error! Status: ${response.status}`);
        }
        return response.json();
    })
    .then(data => {
        if (data.response) {
            addMessage('assistant', data.response);
        } else {
            addMessage('assistant', 'Error: Unable to process the query.');
        }
        sendButton.disabled = false;
        sendButton.innerHTML = '➤';
    })
    .catch(error => {
        addMessage('assistant', `Error: Failed to connect to the server. ${error.message}`);
        sendButton.disabled = false;
        sendButton.innerHTML = '➤';
        console.error('Query error:', error);
    });
}

function exitFullscreen() {
    const rightSection = document.querySelector('.right-section');
    const searchBar = document.querySelector('.search-bar');
    const contentArea = document.querySelector('.content-area');
    const initialChatTitle = document.getElementById('initialChatTitle');
    const chatArea = document.querySelector('.chat-area');
    const exitButton = document.querySelector('.exit-fullscreen-button');
    
    // Get all elements to show again
    const leftSection = document.querySelector('.left-section');
    const rightSection2 = document.querySelector('.right-section2');
    const loginButton = document.querySelector('.login-button');
    const historyButton = document.querySelector('.history-button');
    const ragHero = document.querySelector('.rag-hero');

    // Remove fullscreen classes
    rightSection.classList.remove('fullscreen');
    searchBar.classList.remove('fullscreen');
    contentArea.classList.remove('chat-mode');
    
    // Show all hidden elements
    leftSection.classList.remove('hidden');
    rightSection2.classList.remove('hidden');
    loginButton.classList.remove('hidden');
    historyButton.classList.remove('hidden');
    ragHero.classList.remove('hidden');
    
    // Hide chat area and show initial title
    chatArea.style.display = 'none';
    initialChatTitle.style.display = 'block';
    
    if (exitButton) {
        exitButton.remove();
    }

    promptSent = false;
    adjustLayout();
}

function adjustLayout() {
    const rightSection = document.querySelector('.right-section');
    const chatMessages = document.getElementById('chatMessages');
    const chatArea = document.querySelector('.chat-area');
    const searchBar = document.querySelector('.search-bar');
    const exitButton = document.querySelector('.exit-fullscreen-button');

    if (rightSection.classList.contains('fullscreen')) {
        const contentArea = document.querySelector('.content-area');
        const containerHeight = contentArea.offsetHeight;
        const searchBarHeight = searchBar?.offsetHeight || 70;
        const exitButtonHeight = exitButton?.offsetHeight || 40;
        const chatHeaderHeight = document.querySelector('.chat-header')?.offsetHeight || 60;
        const padding = 40;

        const availableHeight = Math.max(200, containerHeight - searchBarHeight - chatHeaderHeight - exitButtonHeight - padding);
        chatMessages.style.maxHeight = `${availableHeight}px`;
        chatMessages.style.height = 'auto';
        chatArea.style.height = `calc(100% - ${searchBarHeight}px)`;
        chatArea.style.display = 'flex';
        chatArea.style.opacity = '1';
    } else {
        chatMessages.style.maxHeight = 'none';
        chatMessages.style.height = 'auto';
        chatArea.style.height = '100%';
    }
}
    </script>
</body>
</html>